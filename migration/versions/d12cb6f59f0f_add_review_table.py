"""Add review table

Revision ID: d12cb6f59f0f
Revises: a9323ae7f850
Create Date: 2025-04-23 09:41:30.601153

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd12cb6f59f0f'
down_revision: Union[str, None] = 'a9323ae7f850'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('userplacereviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('place_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usertrips',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('destination', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usertrips_id'), 'usertrips', ['id'], unique=False)
    op.create_table('uservisits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_uservisits_external_id'), 'uservisits', ['external_id'], unique=False)
    op.create_index(op.f('ix_uservisits_id'), 'uservisits', ['id'], unique=False)
    op.create_index(op.f('ix_uservisits_user_id'), 'uservisits', ['user_id'], unique=False)
    op.drop_index('ix_visits_external_id', table_name='visits')
    op.drop_index('ix_visits_id', table_name='visits')
    op.drop_index('ix_visits_user_id', table_name='visits')
    op.drop_table('visits')
    op.drop_index('ix_trips_id', table_name='trips')
    op.drop_table('trips')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('trips',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('destination', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='trips_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='trips_pkey')
    )
    op.create_index('ix_trips_id', 'trips', ['id'], unique=False)
    op.create_table('visits',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='visits_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='visits_pkey')
    )
    op.create_index('ix_visits_user_id', 'visits', ['user_id'], unique=False)
    op.create_index('ix_visits_id', 'visits', ['id'], unique=False)
    op.create_index('ix_visits_external_id', 'visits', ['external_id'], unique=False)
    op.drop_index(op.f('ix_uservisits_user_id'), table_name='uservisits')
    op.drop_index(op.f('ix_uservisits_id'), table_name='uservisits')
    op.drop_index(op.f('ix_uservisits_external_id'), table_name='uservisits')
    op.drop_table('uservisits')
    op.drop_index(op.f('ix_usertrips_id'), table_name='usertrips')
    op.drop_table('usertrips')
    op.drop_table('userplacereviews')
    # ### end Alembic commands ###
